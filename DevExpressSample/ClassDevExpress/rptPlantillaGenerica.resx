<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="fxReceptorDomicilio.Expression" xml:space="preserve">
    <value>Concat(
Iif(IsNullOrEmpty([calle]),'',[calle]) ,
Iif(IsNullOrEmpty([noExterior]),'',Concat(' No. ',[noExterior])) ,
Iif(IsNullOrEmpty([noInterior]),'',Concat(' Int. ',[noInterior])),
Iif(IsNullOrEmpty([colonia]),'',Concat(' Colonia ',[colonia])) ,
Iif(IsNullOrEmpty([calle])  And  IsNullOrEmpty([noExterior])  And IsNullOrEmpty([noInterior])   And IsNullOrEmpty([colonia]),'',Concat(Char(13),Char(10))  ),
Iif(IsNullOrEmpty([localidad]),'',[localidad]) ,
Iif(IsNullOrEmpty([municipio]),'',Concat(', ',[municipio])) ,
Iif(IsNullOrEmpty([estado]),'',Concat(', ',[estado],'. ')) ,
[pais],
Iif(IsNullOrEmpty([codigoPostal]),'',Concat(' C.P. ',[codigoPostal])) 
)</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <data name="fxDomicilioExpedidoEn.Expression" xml:space="preserve">
    <value>Concat(
Iif(IsNullOrEmpty([calle]),'',[calle]) ,
Iif(IsNullOrEmpty([noExterior]),'',Concat(' No. ',[noExterior])) ,
Iif(IsNullOrEmpty([noInterior]),'',Concat(' Int. ',[noInterior])),
Iif(IsNullOrEmpty([colonia]),'',Concat(' Colonia ',[colonia])) ,
Iif(IsNullOrEmpty([calle])  And  IsNullOrEmpty([noExterior])  And IsNullOrEmpty([noInterior])   And IsNullOrEmpty([colonia]),'',Concat(Char(13),Char(10)) ),
Iif(IsNullOrEmpty([localidad]),'',Concat( [localidad],',')) ,
Iif(IsNullOrEmpty([municipio]),'',[municipio]) ,
Iif(IsNullOrEmpty([localidad])  And  IsNullOrEmpty([municipio]),'',Concat(Char(13),Char(10)) ),
Iif(IsNullOrEmpty([estado]),'',Concat([estado],'. ')) ,
[pais],
Iif(IsNullOrEmpty([codigoPostal]),'',Concat(' C.P. ',[codigoPostal])) 
)</value>
  </data>
  <data name="fxEmisorDomicilio.Expression" xml:space="preserve">
    <value>Concat(
[calle],
Iif(IsNullOrEmpty([noExterior]),'',Concat(' No. ',[noExterior])) ,
Iif(IsNullOrEmpty([noInterior]),'',Concat(' Int. ',[noInterior])),
Iif(IsNullOrEmpty([colonia]),'',Concat(' Colonia ',[colonia])) ,', ',
Iif(IsNullOrEmpty([localidad]), Concat(Char(13),Char(10),[municipio]), Concat(Char(10),Char(13),[localidad] ,', ',[municipio])),
Char(10),Char(13),
[estado],
'. ',
[pais],
'  C.P. ',
[codigoPostal]
)</value>
  </data>
</root>